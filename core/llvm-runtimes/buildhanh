name=llvm-runtimes
ver=14.0.6
desc="Required libraries to run binaries"
home="https://llvm.org"
license="Apache 2.0 with LLVM exception"
contain="libunwind libcxx libcxxabi"
depends="linux-headers"
mkdeps="cmake libclangrt_builtins"
# LLVM is a little complicated since it requires
# a monopoly layout to build projects -_-
sources="https://github.com/llvm/llvm-project/releases/download/llvmorg-$ver/llvm-project-$ver.src.tar.xz" 
buildFlags="ninja/make/data"
files="llvm-project-$ver.src.tar.xz"

for arg in $misc; do

case $arg in 
	"ninja"	)	
		cmd="ninja";
		filetype="Ninja";;
	"make"	)
		cmd="gmake";
		filetype="Unix Makefiles";;
	"data"  ) 
		cmd="data";
		echo "Data build, ignoring";;
esac

done
 
test -z $cmd && die "Build type is empty! Please specify build type..."

unpack() {
# CMake supports several build systems, but we
# will support only Ninja and Makefile
if test -z "$nodeps"; then
	check_deps $cmd
fi

cd $workdir 
tar -xf $hanhdir/llvm-project-$ver.src.tar.xz
mv llvm-project-$ver.* llvm-project-$ver
cd llvm-project-$ver
for f in libunwind libcxx libcxxabi; do
	cp -r $f llvm/projects/
done
}

compile() {
cat << EOF
The tests cannot compie if LLVM runtimes 
libraries (unwind, c++, c++abi) is not included. 
Depends on your case, modify the line below 
EOF
export CFLAGS="$CFLAGS $LDFLAGS"
export CXXFLAGS="$CXXFLAGS $LDFLAGS"

cd $workdir/llvm-project-$ver/llvm
cmake -S . -B build \
	-DCMAKE_INSTALL_PREFIX=/usr \
	-DCMAKE_BUILD_TYPE=Release \
	-DLLVM_INCLUDE_BENCHMARKS=OFF \
	-DLIBCXX_ENABLE_BENCHMARKS=OFF \
	-DLIBUNWIND_USE_COMPILER_RT=ON \
	-DLIBUNWIND_INSTALL_HEADERS=ON \
	-DLIBCXXABI_USE_COMPILER_RT=ON \
	-DLIBCXXABI_USE_LLVM_UNWINDER=ON \
	-DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY=YES \
	-DLIBCXX_HAS_MUSL_LIBC=ON \
	-DLIBCXX_USE_COMPILER_RT=ON \
	-DLIBCXX_CXX_ABI=libcxxabi \
	-DLIBCXX_HAS_ATOMIC_LIB=OFF \
	-DLIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY=ON \
	-DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=ON \
	-DLIBCXX_INSTALL_FILESYSTEM_LIBRARY=ON \
	-DLLVM_DEFAULT_TARGET_TRIPLE=$CHOST \
	-DLLVM_HOST_TRIPLE=$CHOST \
	-Wno-dev -G "$filetype"
eval $cmd -C build unwind cxxabi cxx || exit 1
}

mkpkg() {
cd $workdir/llvm-project-$ver/llvm
eval DESTDIR=$pkgdir $cmd -C build \
	install-unwind \
	install-unwind-headers \
	install-cxxabi \
	install-cxx || exit 1
}
