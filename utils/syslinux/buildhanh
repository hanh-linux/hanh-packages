# Patches are taken from Arch Linux and Alpine Linux
name=syslinux
ver=6.03
desc="A flexible bootloaders can boot from various filesystems"
home="https://www.syslinux.org/"
license="GPL2"
build_bin="nasm perl"
sources="https://mirrors.edge.kernel.org/pub/linux/utils/boot/$name/Testing/6.04/$name-$ver.tar.xz                        \
https://raw.githubusercontent.com/archlinux/svntogit-packages/packages/syslinux/trunk/0002-gfxboot-menu-label.patch       \
https://raw.githubusercontent.com/archlinux/svntogit-packages/packages/syslinux/trunk/0016-strip-gnu-property.patch       \
https://raw.githubusercontent.com/archlinux/svntogit-packages/packages/syslinux/trunk/0017-single-load-segment.patch      \
https://raw.githubusercontent.com/archlinux/svntogit-packages/packages/syslinux/trunk/0018-prevent-pow-optimization.patch \
https://git.alpinelinux.org/aports/plain/main/syslinux/fix-sysmacros.patch                                                \
https://git.alpinelinux.org/aports/plain/main/syslinux/gcc-10.patch"
needed="$name-$ver.tar.xz 0002-gfxboot-menu-label.patch 0016-strip-gnu-property.patch 0017-single-load-segment.patch 0018-prevent-pow-optimization.patch fix-sysmacros.patch gcc-10.patch"

unpack-pkg() {
cd $workdir
tar -xf $hanhdir/$name-$ver.tar.xz
cd $name-$ver
patch -Np1 -i $hanhdir/0002-gfxboot-menu-label.patch
patch -Np1 -i $hanhdir/0016-strip-gnu-property.patch
patch -Np1 -i $hanhdir/0017-single-load-segment.patch
patch -Np1 -i $hanhdir/0018-prevent-pow-optimization.patch
patch -Np1 -i $hanhdir/fix-sysmacros.patch
patch -Np1 -i $hanhdir/gcc-10.patch
truncate --size 0 mk/devel.mk

## We use commands from Sabotage Linux to remove stupid stuff out of the door
echo "Removing unimportant stuff..."
# Exclude windows stuff and mtools and others
sed 's|INSTALLSUBDIRS = com32 utils dosutil|INSTALLSUBDIRS = com32 utils|g' -i Makefile
sed '/DIAGDIR/d' -i Makefile

# Throw Windooze stuff out
sed 's|diag libinstaller dos win32 win64 dosutil txt|libinstaller txt|g' -i Makefile
sed 's|win32/syslinux.exe win64/syslinux64.exe||g' -i Makefile
sed 's|dosutil/\*.com dosutil/\*.sys||g' -i Makefile
sed 's|dos/syslinux.com||g' -i Makefile
sed 's|gpxe/gpxelinuxk*\.0||g' -i Makefile

# We dont want the perl-based utils
# They also pull in the isohybrid mbrs
sed "s|utils/[a-z]*||g" -i Makefile

# Skip parts of isolinux that we dont need
sed "s,core/isolinux-debug.bin,," -i Makefile
sed "s,mbr/\*.bin,mbr/\*mbr.bin mbr/isohdpfx.bin," -i Makefile

# We dont need Memdisk
sed "s,memdisk/memdisk,," -i Makefile
sed "s,memdump/memdump.com,," -i Makefile

# rarely used COM32 Modules
sed "s,com32/modules/\*.c32,," -i Makefile
sed "s,com32/hdt/\*.c32,," -i Makefile
sed "s,com32/rosh/\*.c32,," -i Makefile
sed "s,com32/gfxboot/\*.c32,," -i Makefile
sed "s,com32/sysdump/\*.c32,," -i Makefile
sed "s,com32/lua/src/\*.c32,," -i Makefile
sed "s,com32/gpllib/\*.c32,," -i Makefile
sed "s,com32/cmenu/libmenu/\*.c32,," -i Makefile

# Exclude perl utils from being installed
sed '/DIRS/ s/utils//' -i Makefile

sed -i 's,#include <getkey.h>,#include "include/getkey.h",' com32/libutil/keyname.c
sed -i 's,#include <libutil.h>,#include "include/libutil.h",' com32/libutil/keyname.c
sed -i 's,#include "sha1.h",#include "include/sha1.h",' com32/libutil/sha1hash.c
sed -i 's,#include <base64.h>,#include "include/base64.h",' com32/libutil/unbase64.c
sed -i 's,#include <md5.h>,#include "include/md5.h",' com32/libutil/md5.c
sed -i 's,#include <md5.h>,#include "include/md5.h",' com32/libutil/crypt-md5.c
sed -i 's,#include <minmax.h>,#include "include/minmax.h",' com32/libutil/sha256crypt.c
sed -i 's,#include "xcrypt.h",#include "include/xcrypt.h",' com32/libutil/sha256crypt.c
sed -i 's,#include <minmax.h>,#include "include/minmax.h",' com32/libutil/sha512crypt.c
sed -i 's,#include "xcrypt.h",#include "include/xcrypt.h",' com32/libutil/sha512crypt.c
sed -i 's,#include <base64.h>,#include "include/base64.h",' com32/libutil/base64.c
sed -i '/herror.*/d' utils/gethostip.c
sed -ri 's,__uint([0-9]+)_t,uint\1_t,g' efi/wrapper.c
sed -ri 's,__uint([0-9]+)_t,uint\1_t,g' efi/wrapper.h
}

_make='LDFLAGS+="--no-dynamic-linker" CFLAGS="$CFLAGS -fPIC" make CC="$CC" LD="$LD" OBJCOPY="$OBJCOPY" RANLIB="$RANLIB" AR="$AR"'

compile-pkg() {
# Bootloader stuff should be compiled with no optimization, set -O2 for CFLAGS and CXXFLAGS instead -O3 and use default flags (no -flto,...)
cd $workdir/$name-$ver
unset LDFLAGS
# UEFI isn't supported on Hanh Linux currently, and we will use an another bootloader for it. 
eval $_make bios installer
}

make-pkg() {
depends=mtools

cd $workdir/$name-$ver
eval $_make INSTALLROOT=$pkgdir -j1 bios install
install -dm755 $pkgdir/usr/lib/syslinux
}


