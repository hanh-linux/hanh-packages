CFLAGS="$CFLAGS -I/home/kun/stuff/clang-toolchain/toolchain/lib/clang/14.0.5/include/"
CXXFLAGS="$CXXFLAGS $CFLAGS"
LDFLAGS="$LDFLAGS -L/home/kun/stuff/clang-toolchain/sysroot/usr/lib -lffi"

# Patches from buildroot/buildroot
# Host FFI doesn't work as expected, using Python 
# internal FFI
# We want to use gmake for easier error handling
name=python
ver=3.10.7
desc="Next generation of the python high-level scripting language"
home="https://www.python.org/"
license="custom"
depends="gdbm expat openssl zlib bzip2"
mkdeps="clang gmake sqlite"
sources="https://www.python.org/ftp/python/$ver/Python-$ver.tar.xz"
attach="0001-Don-t-search-system-for-headers-libraries.patch \
	0004-Adjust-library-header-paths-for-cross-compilation.patch \
	0006-Don-t-add-multiarch-paths.patch \
	0007-Abort-on-failed-module-build.patch \
	0013-Add-option-to-disable-the-sqlite3-module.patch \
	0024-Add-an-option-to-disable-the-readline-module.patch \
	0027-Fix-cross-compiling-the-uuid-module.patch "
contain="python3"
files="Python-$ver.tar.xz $attach"
buildFlags="cross"

for arg in $misc; do
	case $arg in
		cross)  cross_compile=1;
			echo "Please include path to <stdatomic.h>, <limits.h>,...";;
	esac
done

unpack() {
cd $workdir
tar -xf $hanhdir/Python-$ver.tar.xz
mv Python-$ver $name-$ver

cd $name-$ver
if test -n "$cross_compile"; then
	patch -Np0 -i $hanhdir/0001-Don-t-search-system-for-headers-libraries.patch
	patch -Np0 -i $hanhdir/0004-Adjust-library-header-paths-for-cross-compilation.patch
	patch -Np0 -i $hanhdir/0027-Fix-cross-compiling-the-uuid-module.patch
fi

patch -Np0 -i $hanhdir/0007-Abort-on-failed-module-build.patch
patch -Np0 -i $hanhdir/0006-Don-t-add-multiarch-paths.patch
#patch -Np0 -i $hanhdir/0013-Add-option-to-disable-the-sqlite3-module.patch
#patch -Np0 -i $hanhdir/0024-Add-an-option-to-disable-the-readline-module.patch

rm -rf \
	Modules/expat \
	Modules/_ctypes/darwin* \
	Modules/_ctypes/libffi*
}

compile() {
cd $workdir/$name-$ver
./configure \
	--host=$CHOST \
	--build=$CBUILD \
	--prefix=/usr \
	--enable-shared \
	--with-system-expat \
	--with-system-ffi \
	--without-ensurepip \
	--with-openssl=$sysroot/usr/lib \
	--enable-optimizations \
	--disable-test-modules
V=0 gmake
read a
}

mkpkg() {
cd $workdir/$name-$ver
sed -i 's/^all:.*$/all: build_all/' Makefile

V=0 gmake DESTDIR=$pkgdir install || exit 1
ln -sf python3 $pkgdir/usr/bin/python
ln -sf python3-config $pkgdir/usr/bin/python-config
ln -sf idle3 $pkgdir/usr/bin/idle
ln -sf pydoc3 $pkgdir/usr/bin/pydoc
}
